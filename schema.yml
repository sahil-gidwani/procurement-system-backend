openapi: 3.0.3
info:
  title: ProcurEase
  version: 1.0.0
  description: Your Gateway to Effortless Procurement
paths:
  /accounts/change-password/:
    put:
      operationId: accounts_change_password_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
    patch:
      operationId: accounts_change_password_partial_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /accounts/password-reset/:
    post:
      operationId: accounts_password_reset_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
  /accounts/password-reset-confirm/{id}/{token}/:
    put:
      operationId: accounts_password_reset_confirm_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
    patch:
      operationId: accounts_password_reset_confirm_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetConfirm'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /accounts/profile/:
    get:
      operationId: accounts_profile_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /accounts/profile/delete/:
    delete:
      operationId: accounts_profile_delete_destroy
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /accounts/profile/update/:
    put:
      operationId: accounts_profile_update_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: accounts_profile_update_partial_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /accounts/register/procurement-officer/:
    post:
      operationId: accounts_register_procurement_officer_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcurementOfficerRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcurementOfficerRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcurementOfficerRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcurementOfficerRegister'
          description: ''
  /accounts/register/vendor/:
    post:
      operationId: accounts_register_vendor_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorRegister'
          description: ''
  /accounts/token/:
    post:
      operationId: accounts_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /accounts/token/refresh/:
    post:
      operationId: accounts_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /accounts/vendor/list/:
    get:
      operationId: accounts_vendor_list_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vendor'
          description: ''
  /dashboard/admin/:
    get:
      operationId: dashboard_admin_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDashboard'
          description: ''
  /dashboard/procurement-officer/:
    get:
      operationId: dashboard_procurement_officer_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcurementOfficerDashboard'
          description: ''
  /dashboard/vendor/:
    get:
      operationId: dashboard_vendor_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorDashboard'
          description: ''
  /inventory/{id}/:
    get:
      operationId: inventory_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /inventory/{id}/delete/:
    delete:
      operationId: inventory_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/{id}/update/:
    put:
      operationId: inventory_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    patch:
      operationId: inventory_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /inventory/create/:
    post:
      operationId: inventory_create_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /inventory/forecast/{inventory_id}/:
    get:
      operationId: inventory_forecast_retrieve
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: inventory_forecast_create
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /inventory/historical/{inventory_id}/list/:
    get:
      operationId: inventory_historical_list_list
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalInventory'
          description: ''
  /inventory/list/:
    get:
      operationId: inventory_list_list
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
          description: ''
  /inventory/optimize/{inventory_id}/:
    get:
      operationId: inventory_optimize_retrieve
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizedInventory'
          description: ''
  /inventory/optimize/{inventory_id}/create/:
    post:
      operationId: inventory_optimize_create_create
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizedInventory'
          description: ''
  /inventory/optimize/{inventory_id}/delete/:
    delete:
      operationId: inventory_optimize_delete_destroy
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/optimize/{inventory_id}/update/:
    put:
      operationId: inventory_optimize_update_update
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizedInventory'
          description: ''
    patch:
      operationId: inventory_optimize_update_partial_update
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOptimizedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOptimizedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOptimizedInventory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizedInventory'
          description: ''
  /logistics/inventory-receipt/{id}/:
    get:
      operationId: logistics_inventory_receipt_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryReceipt'
          description: ''
  /logistics/inventory-receipt/{id}/delete/:
    delete:
      operationId: logistics_inventory_receipt_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /logistics/inventory-receipt/{id}/update/:
    put:
      operationId: logistics_inventory_receipt_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryReceipt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryReceipt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryReceipt'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryReceipt'
          description: ''
    patch:
      operationId: logistics_inventory_receipt_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventoryReceipt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventoryReceipt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventoryReceipt'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryReceipt'
          description: ''
  /logistics/inventory-receipt/create/{order_id}/:
    post:
      operationId: logistics_inventory_receipt_create_create
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryReceipt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryReceipt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryReceipt'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryReceipt'
          description: ''
  /logistics/inventory-receipt/list/:
    get:
      operationId: logistics_inventory_receipt_list_list
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryReceipt'
          description: ''
  /logistics/inventory-receipt/vendor/{id}/:
    get:
      operationId: logistics_inventory_receipt_vendor_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryReceipt'
          description: ''
  /logistics/inventory-receipt/vendor/list/:
    get:
      operationId: logistics_inventory_receipt_vendor_list_list
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryReceipt'
          description: ''
  /logistics/invoice/{id}/:
    get:
      operationId: logistics_invoice_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /logistics/invoice/{id}/delete/:
    delete:
      operationId: logistics_invoice_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /logistics/invoice/{id}/payment-status/:
    put:
      operationId: logistics_invoice_payment_status_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePaymentStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoicePaymentStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoicePaymentStatus'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePaymentStatus'
          description: ''
    patch:
      operationId: logistics_invoice_payment_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoicePaymentStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoicePaymentStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoicePaymentStatus'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePaymentStatus'
          description: ''
  /logistics/invoice/{id}/update/:
    put:
      operationId: logistics_invoice_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    patch:
      operationId: logistics_invoice_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /logistics/invoice/{id}/vendor-rating/:
    put:
      operationId: logistics_invoice_vendor_rating_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceVendorRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceVendorRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceVendorRating'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceVendorRating'
          description: ''
    patch:
      operationId: logistics_invoice_vendor_rating_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceVendorRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceVendorRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceVendorRating'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceVendorRating'
          description: ''
  /logistics/invoice/create/{order_id}/:
    post:
      operationId: logistics_invoice_create_create
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /logistics/invoice/list/:
    get:
      operationId: logistics_invoice_list_list
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
          description: ''
  /logistics/invoice/procurement-officer/{id}/:
    get:
      operationId: logistics_invoice_procurement_officer_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /logistics/invoice/procurement-officer/list/:
    get:
      operationId: logistics_invoice_procurement_officer_list_list
      tags:
      - logistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
          description: ''
  /purchase/purchase-orders/list/:
    get:
      operationId: purchase_purchase_orders_list_list
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrder'
          description: ''
  /purchase/purchase-orders/vendor/{id}/status/:
    put:
      operationId: purchase_purchase_orders_vendor_status_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderStatus'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderStatus'
          description: ''
    patch:
      operationId: purchase_purchase_orders_vendor_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrderStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrderStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrderStatus'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderStatus'
          description: ''
  /purchase/purchase-orders/vendor/list/:
    get:
      operationId: purchase_purchase_orders_vendor_list_list
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrder'
          description: ''
  /purchase/purchase-requisitions/{id}/:
    get:
      operationId: purchase_purchase_requisitions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequisition'
          description: ''
  /purchase/purchase-requisitions/{id}/delete/:
    delete:
      operationId: purchase_purchase_requisitions_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /purchase/purchase-requisitions/{id}/update/:
    put:
      operationId: purchase_purchase_requisitions_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequisition'
          description: ''
    patch:
      operationId: purchase_purchase_requisitions_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseRequisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseRequisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseRequisition'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequisition'
          description: ''
  /purchase/purchase-requisitions/create/{inventory_id}/:
    post:
      operationId: purchase_purchase_requisitions_create_create
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequisition'
          description: ''
  /purchase/purchase-requisitions/list/:
    get:
      operationId: purchase_purchase_requisitions_list_list
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseRequisition'
          description: ''
  /purchase/purchase-requisitions/vendor/list/:
    get:
      operationId: purchase_purchase_requisitions_vendor_list_list
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseRequisitionVendor'
          description: ''
  /purchase/supplier-bids/{id}/:
    get:
      operationId: purchase_supplier_bids_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierBid'
          description: ''
  /purchase/supplier-bids/{id}/delete/:
    delete:
      operationId: purchase_supplier_bids_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /purchase/supplier-bids/{id}/update/:
    put:
      operationId: purchase_supplier_bids_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierBid'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierBid'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierBid'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierBid'
          description: ''
    patch:
      operationId: purchase_supplier_bids_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplierBid'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplierBid'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplierBid'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierBid'
          description: ''
  /purchase/supplier-bids/create/{requisition_id}/:
    post:
      operationId: purchase_supplier_bids_create_create
      parameters:
      - in: path
        name: requisition_id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierBid'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierBid'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierBid'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierBid'
          description: ''
  /purchase/supplier-bids/list/:
    get:
      operationId: purchase_supplier_bids_list_list
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierBid'
          description: ''
  /purchase/supplier-bids/procurement-officer/{id}/:
    get:
      operationId: purchase_supplier_bids_procurement_officer_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierBidProcurementOfficer'
          description: ''
  /purchase/supplier-bids/procurement-officer/{id}/status/:
    put:
      operationId: purchase_supplier_bids_procurement_officer_status_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierBidProcurementOfficerStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierBidProcurementOfficerStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierBidProcurementOfficerStatus'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierBidProcurementOfficerStatus'
          description: ''
    patch:
      operationId: purchase_supplier_bids_procurement_officer_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplierBidProcurementOfficerStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplierBidProcurementOfficerStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplierBidProcurementOfficerStatus'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierBidProcurementOfficerStatus'
          description: ''
  /purchase/supplier-bids/procurement-officer/list/{requisition_id}/:
    get:
      operationId: purchase_supplier_bids_procurement_officer_list_list
      parameters:
      - in: path
        name: requisition_id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierBidProcurementOfficer'
          description: ''
  /purchase/supplier-bids/procurement-officer/list/{requisition_id}/ranking/:
    post:
      operationId: purchase_supplier_bids_procurement_officer_list_ranking_create
      parameters:
      - in: path
        name: requisition_id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierBidProcurementOfficer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierBidProcurementOfficer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierBidProcurementOfficer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierBidProcurementOfficer'
          description: ''
components:
  schemas:
    AdminDashboard:
      type: object
      properties:
        total_users:
          type: integer
        users_by_role: {}
        user_registration_over_time: {}
        vendors_by_vendor_type: {}
        vendor_rating_distribution: {}
    BlankEnum:
      enum:
      - ''
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - old_password
      - password1
      - password2
    HistoricalInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        demand:
          type: integer
          maximum: 2147483647
          minimum: 0
        datetime:
          type: string
          format: date-time
      required:
      - datetime
      - id
      - stock_quantity
    Inventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        item_name:
          type: string
          maxLength: 255
        description:
          type: string
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        location:
          type: string
          maxLength: 255
        date_added:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
      required:
      - date_added
      - description
      - id
      - item_name
      - last_updated
      - location
      - stock_quantity
      - unit_price
    InventoryReceipt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        receipt_id:
          type: string
          maxLength: 255
        receipt_date:
          type: string
          format: date
          readOnly: true
        received_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        received_condition:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ReceivedConditionEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        inspection_notes:
          type: string
          nullable: true
        inspection_report:
          type: string
          format: uri
          readOnly: true
          nullable: true
      required:
      - id
      - inspection_report
      - receipt_date
      - receipt_id
      - received_quantity
    Invoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        invoice_number:
          type: string
          maxLength: 255
        invoice_date:
          type: string
          format: date
          readOnly: true
        account_number:
          type: string
          maxLength: 255
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_due_date:
          type: string
          format: date
        payment_mode:
          $ref: '#/components/schemas/PaymentModeEnum'
        payment_status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          readOnly: true
        invoice_report:
          type: string
          format: uri
          readOnly: true
          nullable: true
        vendor_rated:
          type: boolean
          readOnly: true
      required:
      - account_number
      - id
      - invoice_date
      - invoice_number
      - invoice_report
      - payment_due_date
      - payment_mode
      - payment_status
      - total_amount
      - vendor_rated
    InvoicePaymentStatus:
      type: object
      properties:
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
    InvoiceVendorRating:
      type: object
      properties:
        vendor_rating:
          type: number
          format: double
          maximum: 5.0
          minimum: 0.0
        vendor_rated:
          type: boolean
          readOnly: true
      required:
      - vendor_rated
      - vendor_rating
    MyTokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    NullEnum:
      enum:
      - null
    OptimizedInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        demand:
          type: number
          format: double
          minimum: 0.0
        ordering_cost:
          type: number
          format: double
          minimum: 0.0
        holding_cost:
          type: number
          format: double
          minimum: 0.01
        lead_time:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        service_level:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          nullable: true
        safety_stock:
          type: number
          format: double
          readOnly: true
          nullable: true
        reorder_point:
          type: number
          format: double
          readOnly: true
          nullable: true
        shelf_life:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        storage_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        eoq:
          type: number
          format: double
          readOnly: true
          nullable: true
        inventory:
          type: integer
          readOnly: true
      required:
      - demand
      - eoq
      - holding_cost
      - id
      - inventory
      - ordering_cost
      - reorder_point
      - safety_stock
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - password
    PatchedChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
    PatchedInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        item_name:
          type: string
          maxLength: 255
        description:
          type: string
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        location:
          type: string
          maxLength: 255
        date_added:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
    PatchedInventoryReceipt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        receipt_id:
          type: string
          maxLength: 255
        receipt_date:
          type: string
          format: date
          readOnly: true
        received_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        received_condition:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ReceivedConditionEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        inspection_notes:
          type: string
          nullable: true
        inspection_report:
          type: string
          format: uri
          readOnly: true
          nullable: true
    PatchedInvoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        invoice_number:
          type: string
          maxLength: 255
        invoice_date:
          type: string
          format: date
          readOnly: true
        account_number:
          type: string
          maxLength: 255
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_due_date:
          type: string
          format: date
        payment_mode:
          $ref: '#/components/schemas/PaymentModeEnum'
        payment_status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          readOnly: true
        invoice_report:
          type: string
          format: uri
          readOnly: true
          nullable: true
        vendor_rated:
          type: boolean
          readOnly: true
    PatchedInvoicePaymentStatus:
      type: object
      properties:
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
    PatchedInvoiceVendorRating:
      type: object
      properties:
        vendor_rating:
          type: number
          format: double
          maximum: 5.0
          minimum: 0.0
        vendor_rated:
          type: boolean
          readOnly: true
    PatchedOptimizedInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        demand:
          type: number
          format: double
          minimum: 0.0
        ordering_cost:
          type: number
          format: double
          minimum: 0.0
        holding_cost:
          type: number
          format: double
          minimum: 0.01
        lead_time:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        service_level:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          nullable: true
        safety_stock:
          type: number
          format: double
          readOnly: true
          nullable: true
        reorder_point:
          type: number
          format: double
          readOnly: true
          nullable: true
        shelf_life:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        storage_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        eoq:
          type: number
          format: double
          readOnly: true
          nullable: true
        inventory:
          type: integer
          readOnly: true
    PatchedPasswordResetConfirm:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
    PatchedProfile:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\d{10}$
          maxLength: 10
        gstin:
          type: string
          pattern: ^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$
          maxLength: 15
        company_name:
          type: string
          maxLength: 255
        address:
          type: string
        vendor:
          allOf:
          - $ref: '#/components/schemas/VendorInfo'
          writeOnly: true
          nullable: true
    PatchedPurchaseOrderStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status536Enum'
    PatchedPurchaseRequisition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        requisition_number:
          type: string
          maxLength: 255
        date_created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        quantity_requested:
          type: integer
          maximum: 2147483647
          minimum: 1
        expected_delivery_date:
          type: string
          format: date
        urgency_level:
          $ref: '#/components/schemas/UrgencyLevelEnum'
        comments:
          type: string
          nullable: true
        attachments:
          type: string
          format: uri
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/PurchaseRequisitionStatusEnum'
          readOnly: true
        report:
          type: string
          format: uri
          nullable: true
    PatchedSupplierBid:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        requisition_number:
          type: string
          readOnly: true
        quantity_fulfilled:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date_submitted:
          type: string
          format: date-time
          readOnly: true
        days_delivery:
          type: integer
          maximum: 2147483647
          minimum: 1
        attachments:
          type: string
          format: uri
          nullable: true
        comments:
          type: string
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusC90Enum'
          readOnly: true
    PatchedSupplierBidProcurementOfficerStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusC90Enum'
    PaymentModeEnum:
      enum:
      - credit
      - debit
      - cash
      - cheque
      type: string
      description: |-
        * `credit` - Credit
        * `debit` - Debit
        * `cash` - Cash
        * `cheque` - Cheque
    PaymentStatusEnum:
      enum:
      - paid
      - pending
      type: string
      description: |-
        * `paid` - Paid
        * `pending` - Pending
    ProcurementOfficerDashboard:
      type: object
      properties:
        total_inventory_items:
          type: integer
        top_items_stock_quantity: {}
        top_items_unit_price: {}
        top_items_total_price: {}
        inventory_items_added: {}
        inventory_age: {}
        stock_quantity_distribution: {}
        total_purchase_requisitions:
          type: integer
        purchase_requisitions_by_status: {}
        purchase_requisitions_over_time: {}
        purchase_requisitions_age: {}
        quantity_requested_distribution: {}
    ProcurementOfficerRegister:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\d{10}$
          maxLength: 10
        gstin:
          type: string
          pattern: ^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$
          maxLength: 15
        company_name:
          type: string
          maxLength: 255
        address:
          type: string
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - address
      - company_name
      - email
      - gstin
      - password1
      - password2
      - username
    Profile:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\d{10}$
          maxLength: 10
        gstin:
          type: string
          pattern: ^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$
          maxLength: 15
        company_name:
          type: string
          maxLength: 255
        address:
          type: string
        vendor:
          allOf:
          - $ref: '#/components/schemas/VendorInfo'
          writeOnly: true
          nullable: true
      required:
      - address
      - company_name
      - email
      - gstin
      - username
    PurchaseOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        delivery_location:
          type: string
          readOnly: true
        quantity_ordered:
          type: integer
          readOnly: true
        unit_price:
          type: number
          format: double
          readOnly: true
        expected_delivery_date:
          type: string
          readOnly: true
        order_number:
          type: string
          maxLength: 255
        date_ordered:
          type: string
          format: date
          readOnly: true
        status:
          $ref: '#/components/schemas/Status536Enum'
        bid:
          type: integer
      required:
      - bid
      - date_ordered
      - delivery_location
      - expected_delivery_date
      - id
      - order_number
      - quantity_ordered
      - unit_price
    PurchaseOrderStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status536Enum'
    PurchaseRequisition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        requisition_number:
          type: string
          maxLength: 255
        date_created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        quantity_requested:
          type: integer
          maximum: 2147483647
          minimum: 1
        expected_delivery_date:
          type: string
          format: date
        urgency_level:
          $ref: '#/components/schemas/UrgencyLevelEnum'
        comments:
          type: string
          nullable: true
        attachments:
          type: string
          format: uri
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/PurchaseRequisitionStatusEnum'
          readOnly: true
        report:
          type: string
          format: uri
          nullable: true
      required:
      - date_created
      - expected_delivery_date
      - id
      - last_updated
      - quantity_requested
      - requisition_number
      - status
    PurchaseRequisitionStatusEnum:
      enum:
      - pending
      - approved
      - rejected
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `rejected` - Rejected
    PurchaseRequisitionVendor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        procurement_officer:
          type: string
          readOnly: true
        item_name:
          type: string
          readOnly: true
        requisition_number:
          type: string
          maxLength: 255
        date_created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        quantity_requested:
          type: integer
          maximum: 2147483647
          minimum: 1
        expected_delivery_date:
          type: string
          format: date
        urgency_level:
          $ref: '#/components/schemas/UrgencyLevelEnum'
        comments:
          type: string
          nullable: true
        attachments:
          type: string
          format: uri
          nullable: true
        report:
          type: string
          format: uri
          nullable: true
      required:
      - date_created
      - expected_delivery_date
      - id
      - item_name
      - last_updated
      - procurement_officer
      - quantity_requested
      - requisition_number
    ReceivedConditionEnum:
      enum:
      - good
      - damaged
      - defective
      type: string
      description: |-
        * `good` - Good
        * `damaged` - Damaged
        * `defective` - Defective
    Status536Enum:
      enum:
      - pending
      - shipped
      - delivered
      type: string
      description: |-
        * `pending` - Pending
        * `shipped` - Shipped
        * `delivered` - Delivered
    StatusC90Enum:
      enum:
      - submitted
      - accepted
      - rejected
      type: string
      description: |-
        * `submitted` - Submitted
        * `accepted` - Accepted
        * `rejected` - Rejected
    SupplierBid:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        requisition_number:
          type: string
          readOnly: true
        quantity_fulfilled:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date_submitted:
          type: string
          format: date-time
          readOnly: true
        days_delivery:
          type: integer
          maximum: 2147483647
          minimum: 1
        attachments:
          type: string
          format: uri
          nullable: true
        comments:
          type: string
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusC90Enum'
          readOnly: true
      required:
      - date_submitted
      - days_delivery
      - id
      - quantity_fulfilled
      - requisition_number
      - status
      - unit_price
    SupplierBidProcurementOfficer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supplier_company_name:
          type: string
          readOnly: true
        supplier_rating:
          type: number
          format: double
          maximum: 5.0
          minimum: 0.0
          readOnly: true
        total_ratings:
          type: integer
          maximum: 2147483647
          minimum: 0
          readOnly: true
        weight_unit_price:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          writeOnly: true
        weight_total_cost:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          writeOnly: true
        weight_days_delivery:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          writeOnly: true
        weight_supplier_rating:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          writeOnly: true
        weight_total_ratings:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          writeOnly: true
        quantity_fulfilled:
          type: integer
          readOnly: true
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        date_submitted:
          type: string
          format: date-time
          readOnly: true
        days_delivery:
          type: integer
          readOnly: true
        attachments:
          type: string
          format: uri
          readOnly: true
          nullable: true
        comments:
          type: string
          readOnly: true
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusC90Enum'
          readOnly: true
      required:
      - attachments
      - comments
      - date_submitted
      - days_delivery
      - id
      - quantity_fulfilled
      - status
      - supplier_company_name
      - supplier_rating
      - total_ratings
      - unit_price
      - weight_days_delivery
      - weight_supplier_rating
      - weight_total_cost
      - weight_total_ratings
      - weight_unit_price
    SupplierBidProcurementOfficerStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusC90Enum'
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    UrgencyLevelEnum:
      enum:
      - low
      - medium
      - high
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
    Vendor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        vendor_certified:
          type: boolean
        vendor_type:
          $ref: '#/components/schemas/VendorTypeEnum'
        contract_expiry_date:
          type: string
          format: date
        vendor_rating:
          type: number
          format: double
          maximum: 5.0
          minimum: 0.0
        total_ratings:
          type: integer
          maximum: 2147483647
          minimum: 0
        user:
          type: integer
      required:
      - id
      - user
      - vendor_type
    VendorDashboard:
      type: object
      properties:
        total_supplier_bids:
          type: integer
        top_bids_bid_amount: {}
        supplier_bids_by_status: {}
        supplier_bids_over_time: {}
        total_purchase_orders:
          type: integer
        top_orders_order_amount: {}
        purchase_orders_by_status: {}
        purchase_orders_over_time: {}
    VendorInfo:
      type: object
      properties:
        vendor_certified:
          type: boolean
        vendor_type:
          $ref: '#/components/schemas/VendorTypeEnum'
      required:
      - vendor_type
    VendorRegister:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\d{10}$
          maxLength: 10
        gstin:
          type: string
          pattern: ^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$
          maxLength: 15
        company_name:
          type: string
          maxLength: 255
        address:
          type: string
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        vendor_info:
          allOf:
          - $ref: '#/components/schemas/VendorInfo'
          writeOnly: true
      required:
      - address
      - company_name
      - email
      - gstin
      - password1
      - password2
      - username
      - vendor_info
    VendorTypeEnum:
      enum:
      - supplier
      - manufacturer
      - service_provider
      type: string
      description: |-
        * `supplier` - Supplier
        * `manufacturer` - Manufacturer
        * `service_provider` - Service Provider
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
