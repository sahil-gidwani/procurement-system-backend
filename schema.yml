openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /accounts/change-password/:
    put:
      operationId: accounts_change_password_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
    patch:
      operationId: accounts_change_password_partial_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /accounts/password-reset/:
    post:
      operationId: accounts_password_reset_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
  /accounts/password-reset-confirm/{id}/{token}/:
    put:
      operationId: accounts_password_reset_confirm_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
    patch:
      operationId: accounts_password_reset_confirm_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetConfirm'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /accounts/profile/:
    get:
      operationId: accounts_profile_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /accounts/profile/delete/:
    delete:
      operationId: accounts_profile_delete_destroy
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /accounts/profile/update/:
    put:
      operationId: accounts_profile_update_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: accounts_profile_update_partial_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /accounts/register/procurement-officer/:
    post:
      operationId: accounts_register_procurement_officer_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcurementOfficerRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcurementOfficerRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcurementOfficerRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcurementOfficerRegister'
          description: ''
  /accounts/register/vendor/:
    post:
      operationId: accounts_register_vendor_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorRegister'
          description: ''
  /accounts/token/:
    post:
      operationId: accounts_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /accounts/token/refresh/:
    post:
      operationId: accounts_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /accounts/token/verify/:
    post:
      operationId: accounts_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /accounts/vendor/list/:
    get:
      operationId: accounts_vendor_list_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVendorList'
          description: ''
  /inventory/{id}/:
    get:
      operationId: inventory_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /inventory/{id}/delete/:
    delete:
      operationId: inventory_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/{id}/update/:
    put:
      operationId: inventory_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    patch:
      operationId: inventory_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /inventory/create/:
    post:
      operationId: inventory_create_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /inventory/forecast/{inventory_id}/:
    get:
      operationId: inventory_forecast_retrieve
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: inventory_forecast_create
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /inventory/historical/{inventory_id}/list/:
    get:
      operationId: inventory_historical_list_list
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHistoricalInventoryList'
          description: ''
  /inventory/list/:
    get:
      operationId: inventory_list_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInventoryList'
          description: ''
  /inventory/optimize/{inventory_id}/:
    get:
      operationId: inventory_optimize_retrieve
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizedInventory'
          description: ''
  /inventory/optimize/{inventory_id}/create/:
    post:
      operationId: inventory_optimize_create_create
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizedInventory'
          description: ''
  /inventory/optimize/{inventory_id}/delete/:
    delete:
      operationId: inventory_optimize_delete_destroy
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/optimize/{inventory_id}/update/:
    put:
      operationId: inventory_optimize_update_update
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OptimizedInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizedInventory'
          description: ''
    patch:
      operationId: inventory_optimize_update_partial_update
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOptimizedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOptimizedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOptimizedInventory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizedInventory'
          description: ''
  /purchase/purchase-requisitions/{id}/:
    get:
      operationId: purchase_purchase_requisitions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequisition'
          description: ''
  /purchase/purchase-requisitions/{id}/delete/:
    delete:
      operationId: purchase_purchase_requisitions_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /purchase/purchase-requisitions/{id}/update/:
    put:
      operationId: purchase_purchase_requisitions_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequisition'
          description: ''
    patch:
      operationId: purchase_purchase_requisitions_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseRequisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseRequisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseRequisition'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequisition'
          description: ''
  /purchase/purchase-requisitions/create/{inventory_id}/:
    post:
      operationId: purchase_purchase_requisitions_create_create
      parameters:
      - in: path
        name: inventory_id
        schema:
          type: integer
        required: true
      tags:
      - purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseRequisition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequisition'
          description: ''
  /purchase/purchase-requisitions/list/:
    get:
      operationId: purchase_purchase_requisitions_list_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - purchase
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseRequisitionList'
          description: ''
components:
  schemas:
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - old_password
      - password1
      - password2
    HistoricalInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        stock_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        demand:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        datetime:
          type: string
          format: date-time
      required:
      - datetime
      - id
      - stock_quantity
    Inventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        item_name:
          type: string
          maxLength: 255
        description:
          type: string
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        location:
          type: string
          maxLength: 255
        date_added:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
      required:
      - date_added
      - description
      - id
      - item_name
      - last_updated
      - location
      - stock_quantity
      - unit_price
    MyTokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    OptimizedInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        demand:
          type: number
          format: double
        ordering_cost:
          type: number
          format: double
        holding_cost:
          type: number
          format: double
        lead_time:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        service_level:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          nullable: true
        safety_stock:
          type: number
          format: double
          readOnly: true
          nullable: true
        reorder_point:
          type: number
          format: double
          readOnly: true
          nullable: true
        shelf_life:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        storage_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        eoq:
          type: number
          format: double
          readOnly: true
          nullable: true
      required:
      - demand
      - eoq
      - holding_cost
      - id
      - ordering_cost
      - reorder_point
      - safety_stock
    PaginatedHistoricalInventoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/HistoricalInventory'
    PaginatedInventoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Inventory'
    PaginatedPurchaseRequisitionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseRequisition'
    PaginatedVendorList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vendor'
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - password
    PatchedChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
    PatchedInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        item_name:
          type: string
          maxLength: 255
        description:
          type: string
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        location:
          type: string
          maxLength: 255
        date_added:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
    PatchedOptimizedInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        demand:
          type: number
          format: double
        ordering_cost:
          type: number
          format: double
        holding_cost:
          type: number
          format: double
        lead_time:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        service_level:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          nullable: true
        safety_stock:
          type: number
          format: double
          readOnly: true
          nullable: true
        reorder_point:
          type: number
          format: double
          readOnly: true
          nullable: true
        shelf_life:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        storage_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        eoq:
          type: number
          format: double
          readOnly: true
          nullable: true
    PatchedPasswordResetConfirm:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
    PatchedProfile:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\d{10}$
          maxLength: 10
        gstin:
          type: string
          pattern: ^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$
          maxLength: 15
    PatchedPurchaseRequisition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        requisition_number:
          type: string
          maxLength: 255
        date_created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        quantity_requested:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        expected_delivery_date:
          type: string
          format: date
        urgency_level:
          $ref: '#/components/schemas/UrgencyLevelEnum'
        comments:
          type: string
          nullable: true
        attachments:
          type: string
          format: uri
          nullable: true
        report:
          type: string
          format: uri
          nullable: true
    ProcurementOfficerRegister:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\d{10}$
          maxLength: 10
        gstin:
          type: string
          pattern: ^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$
          maxLength: 15
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - gstin
      - password1
      - password2
      - username
    Profile:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\d{10}$
          maxLength: 10
        gstin:
          type: string
          pattern: ^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$
          maxLength: 15
      required:
      - email
      - gstin
      - username
    PurchaseRequisition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        requisition_number:
          type: string
          maxLength: 255
        date_created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        quantity_requested:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        expected_delivery_date:
          type: string
          format: date
        urgency_level:
          $ref: '#/components/schemas/UrgencyLevelEnum'
        comments:
          type: string
          nullable: true
        attachments:
          type: string
          format: uri
          nullable: true
        report:
          type: string
          format: uri
          nullable: true
      required:
      - date_created
      - expected_delivery_date
      - id
      - last_updated
      - quantity_requested
      - requisition_number
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UrgencyLevelEnum:
      enum:
      - low
      - medium
      - high
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
    Vendor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        vendor_name:
          type: string
          maxLength: 255
        address:
          type: string
        vendor_certified:
          type: boolean
        vendor_type:
          $ref: '#/components/schemas/VendorTypeEnum'
        contract_expiry_date:
          type: string
          format: date
        vendor_rating:
          type: number
          format: double
          maximum: 5.0
          minimum: 0.0
        user:
          type: integer
      required:
      - address
      - contract_expiry_date
      - id
      - user
      - vendor_name
      - vendor_rating
      - vendor_type
    VendorInfo:
      type: object
      properties:
        vendor_name:
          type: string
          maxLength: 255
        address:
          type: string
        vendor_certified:
          type: boolean
        vendor_type:
          $ref: '#/components/schemas/VendorTypeEnum'
        contract_expiry_date:
          type: string
          format: date
        vendor_rating:
          type: number
          format: double
          maximum: 5.0
          minimum: 0.0
      required:
      - address
      - contract_expiry_date
      - vendor_name
      - vendor_rating
      - vendor_type
    VendorRegister:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          pattern: ^\d{10}$
          maxLength: 10
        gstin:
          type: string
          pattern: ^\d{2}[A-Z]{5}\d{4}[A-Z]{1}\d[Z]{1}[A-Z\d]{1}$
          maxLength: 15
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        vendor_info:
          allOf:
          - $ref: '#/components/schemas/VendorInfo'
          writeOnly: true
      required:
      - email
      - gstin
      - password1
      - password2
      - username
      - vendor_info
    VendorTypeEnum:
      enum:
      - supplier
      - manufacturer
      - service_provider
      type: string
      description: |-
        * `supplier` - Supplier
        * `manufacturer` - Manufacturer
        * `service_provider` - Service Provider
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
